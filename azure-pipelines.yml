trigger:
  branches:
    include:
      - main  

pool:
  vmImage: "ubuntu-latest"

variables:
  TF_VERSION: "1.8.4"

stages:
- stage: TerraformInitPlan
  displayName: "Terraform Init & Plan"
  jobs:
  - job: Terraform
    steps:
    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: $(TF_VERSION)

    - task: AzureKeyVault@2
      displayName: "Retrieve SPN Credentials from Key Vault"
      inputs:
        azureSubscription: "Azure-Terraform-Connection"
        keyVaultName: "terraformSecretsforABB"
        secretsFilter: "spn-tenant-id,spn-client-id,spn-client-secret,subscription-id"

    - script: |
        export ARM_CLIENT_ID=$(spn-client-id)
        export ARM_CLIENT_SECRET=$(spn-client-secret)
        export ARM_TENANT_ID=$(spn-tenant-id)
        export ARM_SUBSCRIPTION_ID=$(subscription-id)
        terraform init
        terraform plan -out=$(Pipeline.Workspace)/tfplan
      displayName: "Terraform Init & Plan"

    - task: PublishBuildArtifacts@1
      displayName: "Upload Terraform Plan"
      inputs:
        pathToPublish: "$(Pipeline.Workspace)/tfplan"
        artifactName: "terraform-plan"

- stage: checkforapproval
  displayName: "Check for Approval"
  jobs:
  - job: approval
    pool: server
    timeoutInMinutes: 4320 # Job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # Task times out in 1 day

- stage: TerraformApply
  displayName: "Terraform Apply"
  dependsOn: TerraformInitPlan
  condition: succeeded()
  jobs:
  - job: Apply
    steps:
    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: $(TF_VERSION)

    - task: DownloadBuildArtifacts@0
      displayName: "Download Terraform Plan"
      inputs:
        artifactName: "terraform-plan"
        downloadPath: "$(Pipeline.Workspace)"

    - task: AzureKeyVault@2
      displayName: "Retrieve SPN Credentials from Key Vault"
      inputs:
        azureSubscription: "Azure-Terraform-Connection"
        keyVaultName: "terraformSecretsforABB"
        secretsFilter: "spn-tenant-id,spn-client-id,spn-client-secret,subscription-id"

    - script: |
        export ARM_CLIENT_ID=$(spn-client-id)
        export ARM_CLIENT_SECRET=$(spn-client-secret)
        export ARM_TENANT_ID=$(spn-tenant-id)
        export ARM_SUBSCRIPTION_ID=$(subscription-id)
        terraform apply "$(Pipeline.Workspace)/terraform-plan/tfplan"
      displayName: "Terraform Apply"
