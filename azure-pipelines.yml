trigger:
  branches:
    include:
      - main  

pool:
  vmImage: "ubuntu-latest"

variables:
  TF_VERSION: "1.8.4"
  TF_PLAN_PATH: "$(Build.SourcesDirectory)/tfplan"

stages:
# ----------------- 1️⃣ Install Terraform -----------------
- stage: InstallTerraform
  displayName: "Install Terraform on Agent"
  jobs:
  - job: InstallTerraform
    steps:
    - script: |
        sudo apt-get update && sudo apt-get install -y wget unzip
        wget https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip
        unzip terraform_$(TF_VERSION)_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform version
      displayName: "Install Terraform"

# ----------------- 2️⃣ Terraform Init & Plan -----------------
- stage: TerraformInitPlan
  displayName: "Terraform Init & Plan"
  jobs:
  - job: Terraform
    steps:
    - script: |
        sudo apt-get update && sudo apt-get install -y wget unzip
        wget https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip
        unzip terraform_$(TF_VERSION)_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform version
      displayName: "Install Terraform"

    - task: AzureKeyVault@2
      displayName: "Retrieve SPN Credentials from Key Vault"
      inputs:
        azureSubscription: "Azure-Terraform-Connection"
        keyVaultName: "terraformSecretsforABB"
        secretsFilter: "spn-tenant-id,spn-client-id,spn-client-secret,subscription-id"

    - script: |
        export ARM_CLIENT_ID=$(spn-client-id)
        export ARM_CLIENT_SECRET=$(spn-client-secret)
        export ARM_TENANT_ID=$(spn-tenant-id)
        export ARM_SUBSCRIPTION_ID=$(subscription-id)
        pwd
        cd infra
        terraform init
        terraform plan -out=$(TF_PLAN_PATH)
      displayName: "Terraform Init & Plan"

    - publish: $(TF_PLAN_PATH)
      artifact: tfplan
      displayName: "Store Terraform Plan"

# ----------------- 3️⃣ Approval Before Apply -----------------
- stage: CheckForApproval
  displayName: "Check for Approval"
  pool: server
  jobs:
  - job: Approval
    timeoutInMinutes: 4320  # Job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440  # Task times out in 1 day
      displayName: "Manual Approval"

# ----------------- 4️⃣ Terraform Apply -----------------
- stage: TerraformApply
  displayName: "Terraform Apply"
  dependsOn: TerraformInitPlan
  condition: succeeded()
  jobs:
  - job: Apply
    steps:
    - script: |
        sudo apt-get update && sudo apt-get install -y wget unzip
        wget https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip
        unzip terraform_$(TF_VERSION)_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform version
      displayName: "Install Terraform"

    - checkout: self  # Ensures latest code

    - download: current
      artifact: tfplan
      displayName: "Download Terraform Plan"

    - script: |
        export ARM_CLIENT_ID=$(spn-client-id)
        export ARM_CLIENT_SECRET=$(spn-client-secret)
        export ARM_TENANT_ID=$(spn-tenant-id)
        export ARM_SUBSCRIPTION_ID=$(subscription-id)
        terraform apply $(TF_PLAN_PATH)
      displayName: "Terraform Apply"
