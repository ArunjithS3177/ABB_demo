trigger: none 

pool:
  vmImage: "ubuntu-latest"

variables:
  TF_VERSION: "1.8.4"

stages:
# ----------------- Terraform Init & Plan -----------------
- stage: TerraformInitPlan
  displayName: "Terraform Init & Plan"
  jobs:
  - job: Terraform
    steps:
    - script: |
        sudo apt-get update && sudo apt-get install -y wget unzip
        wget https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip
        unzip terraform_$(TF_VERSION)_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform version
      displayName: "Install Terraform"

    - task: AzureKeyVault@2
      displayName: "Retrieve SPN Credentials from Key Vault"
      inputs:
        azureSubscription: "Azure-Terraform-Connection"
        keyVaultName: "terraformSecretsforABB"
        secretsFilter: "spn-tenant-id,spn-client-id,spn-client-secret,subscription-id"

    - task: Bash@3
      displayName: "Terraform plan"
      inputs:
        targetType: 'inline'
        workingDirectory: '$(Build.SourcesDirectory)/infra'
        script: |
          export ARM_CLIENT_ID=$(spn-client-id)
          export ARM_CLIENT_SECRET=$(spn-client-secret)
          export ARM_TENANT_ID=$(spn-tenant-id)
          export ARM_SUBSCRIPTION_ID=$(subscription-id)
          terraform init 
          terraform plan -out=$(Build.BuildNumber)



    - task: CopyFiles@2
      displayName: 'copy terraform plan to artifacts'
      condition: succeeded()
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/infra'
        Contents: |
          $(Build.BuildNumber)
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
 
    - task: PublishBuildArtifacts@1
      displayName: 'publish terraform plan'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'tfplan'
        
 
# -----------------  Approval Before Apply -----------------
- stage: CheckForApproval
  displayName: "Check for Approval"
  pool: server
  jobs:
  - job: Approval
    timeoutInMinutes: 4320  # Job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440  # Task times out in 1 day
      displayName: "Manual Approval"

# ----------------- Terraform Apply -----------------
- stage: TerraformApply
  displayName: "Terraform Apply"
  dependsOn: CheckForApproval
  condition: succeeded()
  jobs:
  - job: Apply
    steps:
    - task: Bash@3
      displayName: "install Terraform"
      inputs:
        targetType: 'inline'
        script: |
          set -e
          sudo apt-get update && sudo apt-get install -y wget unzip
          wget https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip
          unzip terraform_$(TF_VERSION)_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform version


    - checkout: self  # Ensures latest code

    - task: DownloadPipelineArtifact@2
      displayName: 'download terraform plan'
      inputs:
        artifactName: 'tfplan'
        downloadPath: '$(Build.SourcesDirectory)/infra'

    - task: AzureKeyVault@2
      displayName: "Retrieve SPN Credentials from Key Vault & apply "
      inputs:
        azureSubscription: "Azure-Terraform-Connection"
        keyVaultName: "terraformSecretsforABB"
        secretsFilter: "spn-tenant-id,spn-client-id,spn-client-secret,subscription-id"


    - task: Bash@3
      displayName: "Terraform Apply"
      inputs:
        targetType: 'inline'
  
        workingDirectory: '$(Build.SourcesDirectory)/infra'
        script: |
          export ARM_CLIENT_ID=$(spn-client-id)
          export ARM_CLIENT_SECRET=$(spn-client-secret)
          export ARM_TENANT_ID=$(spn-tenant-id)
          export ARM_SUBSCRIPTION_ID=$(subscription-id)
          terraform init
          terraform apply $(Build.BuildNumber)
